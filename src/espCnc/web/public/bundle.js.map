{
  "version": 3,
  "sources": ["../src/projection.ts", "../src/commands.ts", "../src/ui.ts", "../src/main.ts"],
  "sourcesContent": ["const r_pencil = 15*0.8;\r\nconst pencil_center: Vec2 = [-17*0.8, 0];\r\n\r\nexport type Vec2 = [number,number]\r\nexport function angle_to_coord(paper_pencil: Vec2): Vec2 {\r\n    const pencil_world = add(pencil_center, rotate([r_pencil,0], paper_pencil[1]));\r\n    const paper = rotate(pencil_world, paper_pencil[0]);\r\n    return paper;\r\n}\r\n\r\nexport function length(xy: Vec2): number {\r\n    return Math.sqrt(xy[0]**2 + xy[1]**2);\r\n}\r\n\r\nexport function mul(xy: Vec2, scale: number): Vec2 {\r\n    return [xy[0]*scale,xy[1]*scale];\r\n}\r\n\r\nexport function dot(a: Vec2, b: Vec2): number {\r\n    return a[0]*b[0] + a[1]*b[1];\r\n}\r\n\r\nexport function normalize(xy: Vec2): Vec2 {\r\n    return mul(xy, 1/length(xy));\r\n}\r\n\r\nexport function add(a: Vec2, b: Vec2): Vec2 {\r\n    return [a[0]+b[0],a[1]+b[1]];\r\n}\r\n\r\nexport function sub(a: Vec2, b: Vec2): Vec2 {\r\n    return [a[0]-b[0],a[1]-b[1]];\r\n}\r\n\r\n\r\nexport function rotate(v: Vec2, theta: number): Vec2 {\r\n    return [\r\n        v[0] * Math.cos(theta) + v[1] * -Math.sin(theta),\r\n        v[0] * Math.sin(theta) + v[1] * Math.cos(theta),\r\n    ]\r\n}\r\n\r\nfunction angle(v: Vec2): number {\r\n    return Math.atan2(v[1], v[0]);\r\n}\r\n\r\nexport function coord_to_angle(xy: [number, number]): Vec2 {\r\n    const r1 = r_pencil;\r\n    const r2 = length(xy);\r\n    const d = length(pencil_center);\r\n    const l = (r1**2-r2**2+d**2)/(2*d);\r\n    if(r1**2-l**2 < 0){\r\n        throw new Error(\"can't reach\");\r\n    }\r\n    const h = Math.sqrt(r1**2-l**2);\r\n\r\n    const common = add(mul(pencil_center, -l/d), pencil_center);\r\n    const diff = mul([pencil_center[1],-pencil_center[0]],h/d);\r\n    let inter = add(common, diff);\r\n    if(inter[1] < 0){\r\n        inter = sub(common, diff);\r\n    }\r\n\r\n    const pencil_to_inter = sub(inter, pencil_center);\r\n    const theta_pencil = angle(pencil_to_inter);\r\n    const theta_xy = angle(xy);\r\n    const theta_tip = angle(add(pencil_center, rotate([r_pencil,0],theta_pencil)))\r\n    const theta_paper = theta_tip - theta_xy;\r\n\r\n\r\n    if(theta_paper > 1 || theta_paper < -1) throw new Error(\"angle extra\")\r\n    return [theta_paper, theta_pencil]\r\n}\r\n", "import { add, angle_to_coord, coord_to_angle, length, mul, rotate, sub, Vec2 } from \"./projection\";\r\n\r\nconst CMD_TYPES = {\r\n    StopNow: 0,\r\n    StopAll: 1,\r\n    StartAll: 2,\r\n    Enable: 3,\r\n    SetMicrosteps: 4,\r\n    SetVelocity: 5,\r\n    MoveTo: 6,\r\n    SetStepDir: 7,\r\n    SetSpeed: 8,\r\n    Wait: 9,\r\n    ZeroPosition: 10,\r\n    StealthChop: 11,\r\n    CoolStep: 12,\r\n    SetStatus: 13,\r\n    NewTimingReference: 14,\r\n    Timed: 15,\r\n};\r\n\r\nexport function concat(buffs: Uint8Array[]) {\r\n    const len = buffs.reduce((a,b)=>a + b.length, 0);\r\n    const together = new Uint8Array(len)\r\n    let head = 0;\r\n    for(const buff of buffs) {\r\n        together.set(buff, head);\r\n        head += buff.length;\r\n    }\r\n    return together;\r\n}\r\n\r\nfunction u32_from_array(arr: number[]) {\r\n    return new Uint8Array(new Uint32Array(arr).buffer)\r\n}\r\n\r\nexport interface Command {\r\n    encode(): Uint8Array;\r\n}\r\n\r\nexport class StopNowCommand implements Command {\r\n    constructor(){}\r\n    encode(): Uint8Array {\r\n        return u32_from_array([CMD_TYPES.StopNow,0,0,0,0]);\r\n    }\r\n}\r\n\r\nexport class StartCommand implements Command {\r\n    constructor(){}\r\n    encode(): Uint8Array {\r\n        return u32_from_array([CMD_TYPES.StartAll,0,0,0,0]);\r\n    }\r\n}\r\n\r\nexport class SetupCommand implements Command {\r\n    constructor(){}\r\n    encode(): Uint8Array {\r\n        return new MultiCommmand([\r\n            new StartCommand(),\r\n            new MicrostepsCommand([256, 256, 256, 256]),\r\n            new StealthChopCommand([1,1,1,1]),\r\n            new CoolStepCommand([1,1,1,1]),\r\n            new EnableCommand([1,1,1,1]),\r\n        ]).encode();\r\n    }\r\n}\r\n\r\nexport class StopCommand implements Command {\r\n    constructor(){}\r\n    encode(): Uint8Array {\r\n        return u32_from_array([CMD_TYPES.StopAll,0,0,0,0]);\r\n    }\r\n}\r\n\r\nexport class SpeedCommand implements Command {\r\n    constructor(public delay_us: number){}\r\n    encode(): Uint8Array {\r\n        return u32_from_array([CMD_TYPES.SetSpeed,this.delay_us,0,0,0]);\r\n    }\r\n}\r\n\r\nexport class MoveCommand implements Command {\r\n    constructor(public positions: [number,number,number,number]){}\r\n    encode(): Uint8Array {\r\n        return u32_from_array([CMD_TYPES.MoveTo, ...this.positions]);\r\n    }\r\n}\r\n\r\nexport class EnableCommand implements Command {\r\n    constructor(public enables: [number,number,number,number]){}\r\n    encode(): Uint8Array {\r\n        return u32_from_array([CMD_TYPES.Enable, ...this.enables]);\r\n    }\r\n}\r\n\r\nexport class WaitCommand implements Command {\r\n    constructor(public delay_us: number){}\r\n    encode(): Uint8Array {\r\n        return u32_from_array([CMD_TYPES.Wait, this.delay_us, 0, 0, 0]);\r\n    }\r\n}\r\n\r\nexport class MicrostepsCommand implements Command {\r\n    constructor(public microsteps: [number,number,number,number]){}\r\n    encode(): Uint8Array {\r\n        return u32_from_array([CMD_TYPES.SetMicrosteps, ...this.microsteps]);\r\n    }\r\n}\r\n\r\nexport class ZeroCommand implements Command {\r\n    constructor(){}\r\n    encode(): Uint8Array {    \r\n        return u32_from_array([CMD_TYPES.ZeroPosition, 0,0,0,0]);\r\n    }\r\n}\r\n\r\nexport class StealthChopCommand implements Command {\r\n    constructor(public enables: [number,number,number,number]){}\r\n    encode(): Uint8Array {\r\n        return u32_from_array([CMD_TYPES.StealthChop, ...this.enables]);\r\n    }\r\n}\r\n\r\nexport class CoolStepCommand implements Command {\r\n    constructor(public enables: [number,number,number,number]){}\r\n    encode(): Uint8Array {\r\n        return u32_from_array([CMD_TYPES.CoolStep, ...this.enables]);\r\n    }\r\n}\r\n\r\nexport class AbsoluteAngleCommand implements Command{\r\n    constructor(public angles: [number,number,number,number]) {}\r\n    encode(): Uint8Array {\r\n        const full_rotation = 200*256;\r\n        return new MoveCommand([\r\n            this.angles[0] / Math.PI / 2 * full_rotation,\r\n            this.angles[1] / Math.PI / 2 * full_rotation,\r\n            this.angles[2] / Math.PI / 2 * full_rotation,\r\n            this.angles[3] / Math.PI / 2 * full_rotation,\r\n        ]).encode()\r\n    }\r\n}\r\n\r\nexport class XYCommand implements Command {\r\n    constructor(public xy: Vec2){}\r\n    encode(): Uint8Array {\r\n        let coords = coord_to_angle(this.xy);\r\n        return new AbsoluteAngleCommand([...coords, 0, 0]).encode();\r\n    }\r\n}\r\n\r\nexport class LineCommand implements Command {\r\n    constructor(public start: Vec2, public stop: Vec2){}\r\n    encode(): Uint8Array {\r\n        let dist = length(sub(this.start,this.stop))\r\n        let substeps = Math.ceil(dist * 40)\r\n        let cmds = []\r\n        for(let i = 0; i < substeps; i++){\r\n            let xy = add(mul(this.start, 1 - (i/substeps)), mul(this.stop, (i/substeps)));\r\n            cmds.push(new XYCommand(xy));\r\n        }\r\n        cmds.push(new XYCommand(this.stop))\r\n        return concat(cmds.map(cmd=>cmd.encode()));\r\n    }\r\n}\r\n\r\nexport class CircleCommand implements Command {\r\n    constructor(public r: number, public center: Vec2) {}\r\n    encode(): Uint8Array {\r\n        let substeps = Math.ceil(this.r * 2 * Math.PI * 20);\r\n        let cmds = [];\r\n        for(let i = 0; i <= substeps; i++){\r\n            let theta = i / substeps * Math.PI * 2;\r\n            let xy = add(this.center, rotate([this.r,0], theta));\r\n            cmds.push(new XYCommand(xy))\r\n        }\r\n        return concat(cmds.map(cmd=>cmd.encode()));\r\n    }\r\n}\r\n\r\nexport class StatusCommand implements Command {\r\n    constructor(public status: number) {}\r\n    encode(): Uint8Array {\r\n        return u32_from_array([CMD_TYPES.SetStatus, this.status, 0, 0, 0]);\r\n    }\r\n}\r\n\r\nexport class MultiCommmand implements Command {\r\n    constructor(public cmds: Command[]) {}\r\n    encode(): Uint8Array {\r\n        return concat(this.cmds.map(cmd=>cmd.encode()));\r\n    }\r\n}\r\n\r\nexport class TimedMoveCommand implements Command {\r\n    constructor(public step_sequence: Uint8Array) {}\r\n\r\n    encode_timings(): Uint16Array {\r\n        let last_cmd_index = 0;\r\n        let timing_commands = [];\r\n        for(let i = 0; i < this.step_sequence.length; i++) {\r\n            if(this.step_sequence[i] != 0) {\r\n                timing_commands.push((i - last_cmd_index) | (this.step_sequence[i] << 8));\r\n                last_cmd_index = i;\r\n            }\r\n            if(i - last_cmd_index == 256) {\r\n                timing_commands.push((i - last_cmd_index) | 0x00);\r\n                last_cmd_index = i;\r\n            }\r\n        }\r\n        timing_commands.push((this.step_sequence.length - last_cmd_index))\r\n\r\n        return new Uint16Array(timing_commands);\r\n    }\r\n\r\n    encode(): Uint8Array {\r\n        let commands = this.encode_timings();\r\n\r\n        let header = [\r\n            CMD_TYPES.NewTimingReference, 0, 0, 0, 0,\r\n            CMD_TYPES.Timed, commands.length, 0, 0, 0,\r\n        ]\r\n\r\n        return concat([\r\n            u32_from_array(header),\r\n            new Uint8Array(commands.buffer),\r\n        ])\r\n    }\r\n}", "import { StopNowCommand, SpeedCommand, MoveCommand, StartCommand, StopCommand, EnableCommand, WaitCommand, MicrostepsCommand, ZeroCommand, StealthChopCommand, CoolStepCommand, XYCommand, LineCommand, CircleCommand, Command, MultiCommmand, StatusCommand, SetupCommand, concat, TimedMoveCommand } from \"./commands\";\r\nimport { angle_to_coord, coord_to_angle } from \"./projection\";\r\n\r\n\r\nfunction assert_len<T>(arr: Array<T>, len: number) {\r\n    if(arr.length != len) throw new Error(`Bad length (${arr.length} != ${len})`);\r\n}\r\n\r\nfunction parse_command(cmd: string[]) : Command {\r\n    if(cmd[0] == \"speed\") {\r\n        assert_len(cmd, 2);\r\n        return new SpeedCommand((0,eval)(cmd[1]));\r\n    } else if(cmd[0] == \"move\") {\r\n        assert_len(cmd, 5);\r\n        let nums = cmd.slice(1).map(eval)\r\n        return new MoveCommand([nums[0], nums[1], nums[2], nums[3]]);\r\n    } else if(cmd[0] == \"start\") {\r\n        assert_len(cmd, 1);\r\n        return new StartCommand();\r\n    } else if(cmd[0] == \"stop\") {\r\n        assert_len(cmd, 1);\r\n        return new StopCommand();\r\n    } else if(cmd[0] == \"enable\") {\r\n        assert_len(cmd, 5);\r\n        let nums = cmd.slice(1).map(Number)\r\n        return new EnableCommand([nums[0], nums[1], nums[2], nums[3]]);\r\n    } else if(cmd[0] == \"wait\") {\r\n        assert_len(cmd, 2);\r\n        return new WaitCommand(Number(cmd[1]) * 1000000 | 0)\r\n    } else if(cmd[0] == \"micro\" || cmd[0] == \"microsteps\") {\r\n        assert_len(cmd, 5);\r\n        let nums = cmd.slice(1).map(Number)\r\n        return new MicrostepsCommand([nums[0], nums[1], nums[2], nums[3]]);\r\n    } else if(cmd[0] == \"zero\") {\r\n        assert_len(cmd, 1);\r\n        return new ZeroCommand();\r\n    } else if(cmd[0] == \"stealth\") {\r\n        assert_len(cmd, 5);\r\n        let nums = cmd.slice(1).map(Number)\r\n        return new StealthChopCommand([nums[0], nums[1], nums[2], nums[3]]);\r\n    } else if(cmd[0] == \"cool\") {\r\n        assert_len(cmd, 5);\r\n        let nums = cmd.slice(1).map(Number)\r\n        return new CoolStepCommand([nums[0], nums[1], nums[2], nums[3]]);\r\n    } else if(cmd[0] == \"xy\") {\r\n        assert_len(cmd, 3);\r\n        let nums = cmd.slice(1).map(Number)\r\n        return new XYCommand([nums[0],nums[1]]);\r\n    } else if(cmd[0] == \"line\") {\r\n        assert_len(cmd, 5);\r\n        let nums = cmd.slice(1).map(Number)\r\n        return new LineCommand([nums[0],nums[1]],[nums[2],nums[3]]);\r\n    } else if(cmd[0] == \"circle\") {\r\n        assert_len(cmd, 4);\r\n        let nums = cmd.slice(1).map(Number)\r\n        return new CircleCommand(nums[0], [nums[1],nums[2]]);\r\n    } else if(cmd[0] == \"status\") {\r\n        assert_len(cmd, 2);\r\n        return new StatusCommand(Number(cmd[1]));\r\n    } else if(cmd[0] == \"setup\") {\r\n        assert_len(cmd, 1);\r\n        return new SetupCommand();\r\n    } else if(cmd[0] == \"test\") {\r\n        return test_timing();\r\n    } else {\r\n        throw new Error(\"unknown \" + cmd.toString());\r\n    }\r\n}\r\n\r\nfunction test_timing(): Command {\r\n    let steps = new Uint8Array(1000000);\r\n    let h = 0;\r\n    for(let i = 0; i < 1000; i++) {\r\n        steps[h] = 0x4;\r\n        h += 100;\r\n    }\r\n    console.log(h);\r\n    return new TimedMoveCommand(steps);\r\n}\r\n\r\nfunction apply_macro(macro: string[], stack: Command[]) {\r\n    if(macro[0] == \"#repeat\") {\r\n        assert_len(macro, 2);\r\n        let last = stack.pop();\r\n        let ct = Number(macro[1]);\r\n        stack.push(new MultiCommmand(new Array(ct).fill(last)));\r\n    }\r\n}\r\n\r\nexport class UI {\r\n    ws: WebSocket;\r\n    go_button: HTMLButtonElement;\r\n    estop: HTMLButtonElement;\r\n    code: HTMLTextAreaElement;\r\n    status: HTMLDivElement;\r\n    waitin_promises: {n: number, res: ()=>void}[] = [];\r\n    constructor(ws_url: string, go_id: string, estop_id: string, code_id: string, status_id: string){\r\n        this.ws = new WebSocket(ws_url);\r\n        this.ws.onmessage = (ev=>{\r\n            let s = window.atob(ev.data);\r\n            let d = new Uint8Array(s.length);\r\n            for(let i = 0; i < s.length; i++){\r\n                let v = s.charCodeAt(i);\r\n                d[i] = v;\r\n            }\r\n            let u32 = new Uint32Array(d.buffer);\r\n            let status_index = u32[0];\r\n            this.#new_status(status_index);\r\n        })\r\n        this.code = document.getElementById(code_id) as HTMLTextAreaElement;\r\n        this.go_button = document.getElementById(go_id) as HTMLButtonElement;\r\n        this.estop = document.getElementById(estop_id) as HTMLButtonElement;\r\n        this.status = document.getElementById(status_id) as HTMLDivElement;\r\n\r\n        this.ws.onopen = ()=>{\r\n            console.log(\"WS opened\");\r\n            this.status.innerHTML = \"CONNECTED\";\r\n        }\r\n        this.ws.onclose = ()=>{\r\n            console.log(\"WS closed\");\r\n            this.status.innerHTML = \"DISCONNECTED\";\r\n        }\r\n        this.ws.onerror = e=>{\r\n            console.log(e);\r\n            this.status.innerHTML = \"ERROR\";\r\n        }\r\n        this.estop.addEventListener(\"click\", ()=>{\r\n            this.ws.send(new Uint32Array(new StopNowCommand().encode()));\r\n        });\r\n        this.go_button.addEventListener(\"click\", ()=>{\r\n            this.upload_code()\r\n        })   \r\n    }\r\n\r\n    execute(cmds: Command[]) {\r\n        const binary = concat(cmds.flatMap(x=>x.encode()))\r\n        console.log(binary);\r\n        this.ws.send(binary);\r\n    }\r\n\r\n    #new_status(status_index: number) {\r\n        this.status.innerHTML = status_index+\"\";\r\n        this.waitin_promises = this.waitin_promises.filter(x=>{\r\n            let {n,res} = x;\r\n            if(n == status_index) {\r\n                res();\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        })\r\n    }\r\n\r\n    upload_code() {\r\n        const code = this.code.value;\r\n        const lines = code.split('\\n');\r\n        const cmds = lines\r\n                        .map(l=>l.toLowerCase())\r\n                        .map(l=>l.split(/\\s/).filter(x=>x))\r\n                        .filter(x=>x.length);\r\n\r\n        let commands = [];\r\n        for(const cmd of cmds) {\r\n            if(cmd[0].startsWith('#')) {\r\n                apply_macro(cmd, commands);\r\n            } else {\r\n                commands.push(parse_command(cmd));\r\n            }\r\n        }\r\n        this.execute(commands);\r\n    }\r\n\r\n    async wait_for_status(status: number): Promise<void>{\r\n        return new Promise((res,rej)=>{\r\n            this.waitin_promises.push({n:status,res:res})\r\n        })\r\n    }\r\n}", "import { LineCommand, MoveCommand, StatusCommand, XYCommand } from \"./commands\";\r\nimport { coord_to_angle } from \"./projection\";\r\nimport { UI } from \"./ui\";\r\n\r\nconst ui0 = new UI(\"ws://192.168.234.227/ws\", \"go_button0\", \"estop0\", \"code_input0\", \"status0\");\r\nconst ui1 = new UI(\"ws://192.168.234.216/ws\", \"go_button1\", \"estop1\", \"code_input1\", \"status1\");\r\nconst CANVAS_GO = document.getElementById(\"canvas_go\") as HTMLButtonElement;\r\n\r\nconst canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\ncanvas.width = canvas.clientWidth;\r\ncanvas.height = canvas.clientHeight\r\nconst ctx = canvas.getContext(\"2d\");\r\n\r\n\r\nlet mouse = null;\r\nfunction map_coords(xy: [number,number]){\r\n    return [-(xy[0] / 100), xy[1] / 100 + 6]\r\n}\r\n\r\nlet lines = []\r\n\r\ncanvas.addEventListener(\"mousedown\", ev=>{\r\n    const xy: [number,number] = [ev.clientX-canvas.offsetLeft,ev.clientY-canvas.offsetTop];\r\n    mouse = xy;\r\n})\r\n\r\ncanvas.addEventListener(\"mousemove\", ev=>{\r\n    if(!mouse) return;\r\n    const xy: [number,number] = [ev.clientX-canvas.offsetLeft,ev.clientY-canvas.offsetTop];\r\n    let next_mouse = xy;\r\n    ctx.moveTo(mouse[0],mouse[1]);\r\n    ctx.lineTo(next_mouse[0],next_mouse[1]);\r\n    ctx.stroke();\r\n    let m1 = map_coords(mouse);\r\n    let m2 = map_coords(next_mouse)\r\n    mouse = next_mouse;\r\n    lines.push([m1,m2])\r\n})\r\n\r\ncanvas.addEventListener(\"mouseup\", ev=>{\r\n    mouse = null;\r\n})\r\n\r\nwindow.addEventListener(\"keypress\", ev=>{\r\n    if(ev.key == ' '){\r\n        mouse = null;\r\n    }\r\n})\r\n\r\nfunction pt_eq(a:[number,number],b:[number,number]): boolean{\r\n    return a[0]==b[0] &&a[1]==b[1];\r\n}\r\n\r\n\r\nCANVAS_GO.addEventListener(\"click\", ev=>{\r\n    let all_steps: [[number,number],[number,number]][][] = []\r\n    let step = []\r\n    let current_pos:[number,number] = [-1,-1]\r\n    for(const line of lines) {\r\n        if(pt_eq(line[0], current_pos)) {\r\n            step.push(line);\r\n        } else {\r\n            all_steps.push(step);\r\n            step = [line];\r\n        }\r\n        current_pos = line[1];\r\n    }\r\n    all_steps.push(step);\r\n    all_steps = all_steps.filter(x=>x.length!=0)\r\n    execute_lines(all_steps);\r\n});\r\n\r\nasync function pencil_up(): Promise<void>{\r\n    ui1.execute([new MoveCommand([1300,0,0,0]),new StatusCommand(101)])\r\n    await ui1.wait_for_status(101);\r\n    \r\n}\r\n\r\nasync function pencil_down() {\r\n    ui1.execute([new MoveCommand([1150,0,0,0]),new StatusCommand(102)])\r\n    await ui1.wait_for_status(102);\r\n}\r\n\r\nlet global_counter = 1000;\r\nasync function draw_lines(lines: [[number,number],[number,number]][]) {\r\n    let n = global_counter++;\r\n    let cmds = []\r\n    for(const line of lines){\r\n        cmds.push(new LineCommand(line[0],line[1]))\r\n    }\r\n    ui0.execute([...cmds, new StatusCommand(n)])\r\n    await ui0.wait_for_status(n);\r\n}\r\n\r\nasync function move_to(xy: [number,number]) {\r\n    let n = global_counter++;\r\n    ui0.execute([new XYCommand(xy), new StatusCommand(n)])\r\n    await ui0.wait_for_status(n);\r\n}\r\n\r\nasync function execute_lines(steps: [[number,number],[number,number]][][]){\r\n    for(const step of steps) {\r\n        await pencil_up();\r\n        await move_to(step[0][0])\r\n        await pencil_down();\r\n        await draw_lines(step);\r\n    }\r\n    await pencil_up();\r\n}\r\n"],
  "mappings": "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",
  "names": ["lines", "lines"]
}
